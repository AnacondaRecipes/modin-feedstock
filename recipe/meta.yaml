{% set version = "0.20.1" %}

package:
  name: modin-packages
  version: {{ version }}

source:
  url: https://github.com/modin-project/modin/archive/refs/tags/{{ version }}.tar.gz
  sha256: 6d5c3d0fd0ec370af7c8eeb3f1729765aee97d19d3ebaa79f70b9d94a061bae9

build:
  number: 0
  skip: true  # [py<38]
requirements:
  host:
    - pip
    - python
    - setuptools
    - wheel

# the outputs map the modin extras on PyPI (see upstream definition
# https://github.com/modin-project/modin/blob/0.10.1/setup.py#L40-L45)
# from "modin[<extra>]" to "modin-<extra>" as a conda-forge package
outputs:
  - name: modin-all
    build:
      skip: true  # [py<38]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('modin-core', exact=True) }}
        - {{ pin_subpackage('modin-dask', exact=True) }}
        # ray-default is only in defaults for linux-64 and win-64
        - {{ pin_subpackage('modin-ray', exact=True) }}  # [linux64 or win64]
    test:
      imports:
        # dummy test; actual tests are in subpackages
        - modin

  # compatibility with packagename before split into options
  - name: modin
    build:
      skip: true  # [py<38]
    requirements:
      host:
        - python
      run:
        - python
        # modin needs at least one engine; use dask as it is more light-weight than ray
        - {{ pin_subpackage('modin-dask', exact=True) }}
    test:
      imports:
        - modin
        - modin.pandas

  - name: modin-core
    build:
      skip: true  # [py<38]
      script: python -m pip install . --no-deps --ignore-installed -vv
    requirements:
      host:
        - pip
        - python
        - setuptools
        - wheel
      run:
        - python
        - packaging
        - pandas ==1.5.3
        - numpy >=1.18.5
        - fsspec
        - psutil
    test:
      imports:
        - modin
        - modin.pandas
      requires:
        - distributed
        - pip
      commands:
        - pip check
        - python -c "from distributed import Client; import modin.pandas as pd; import numpy as np; frame_data = np.random.randint(0, 100, size=(2**10, 2**8)); df = pd.DataFrame(frame_data); print(df)"  # [not (linux and ppc64le)]

  - name: modin-dask
    build:
      skip: true  # [py<38]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('modin-core', exact=True) }}
        - dask >=2.22.0
        - distributed >=2.22.0
    test:
      imports:
        - modin
        - modin.pandas
      commands:
        # Skip on ppc64le because of distributed.comm.core.CommClosedError
        - python -c "import modin.pandas as pd, modin.config as cfg; cfg.Engine.put('Dask'); df = pd.DataFrame([])"  # [not (linux and ppc64le)]

  - name: modin-ray
    build:
      # There is no Ray in conda-forge for MacOS yet, see conda-forge/ray-packages-feedstock#2.
      skip: true  # [py<38]
      skip: true  # [not (linux64 or win64)]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('modin-core', exact=True) }}
        - ray-default >=1.13.0
        # https://github.com/modin-project/modin/pull/5270#issuecomment-1331172629
        # workaround for https://github.com/conda/conda/issues/11744
        - grpcio !=1.45.*,!=1.46.*
        - pyarrow
    test:
      imports:
        - modin
        - modin.pandas
      commands:
        - python -c "import modin.pandas as pd, modin.config as cfg; cfg.Engine.put('Ray'); df = pd.DataFrame([])"

about:
  home: https://github.com/modin-project/modin
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Speed up your Pandas workflows by changing a single line of code
  description: |
    Modin is a drop-in replacement for pandas. 
    While pandas is single-threaded, Modin lets you instantly speed up your workflows 
    by scaling pandas so it uses all of your cores. Modin works especially well on larger datasets, 
    where pandas becomes painfully slow or runs out of memory.
  doc_url: https://modin.readthedocs.io/
  dev_url: https://github.com/modin-project/modin

extra:
  recipe-maintainers:
    - devin-petersohn
    - h-vetinari
    - vnlitvinov
    - maksimbo1
  feedstock-name: modin
